{-
The `or` function returns `True` if there are any `True` elements in the `List`
and returns `False` otherwise

Examples:

```
./or [ True, False, True ] = True

./or ([] : List Bool) = False
```
-}
    let or
        : List Bool → Bool
        =   λ(xs : List Bool)
          → List/fold Bool xs Bool (λ(l : Bool) → λ(r : Bool) → l || r) False

in  or
